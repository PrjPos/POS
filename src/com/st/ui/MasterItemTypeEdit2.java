/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.st.ui;

import com.st.beans.MasterItemTypeBean;
import com.st.process.MasterItemTypeProcessor;
import com.st.utils.Utilities;
import javax.swing.JOptionPane;

/**
 *
 * @author SANFON
 */
public class MasterItemTypeEdit2 extends javax.swing.JDialog {

  
  /** Flag used to determine action. update or create. */
  private boolean isUpdate = false;
  private boolean StatusTransaction;
  
  private MasterItemTypeList mil = null;
  
  private MasterItemTypeProcessor mitp = null;
  /**
   * Creates new form MasterItemTypeEdit2
   */
  public MasterItemTypeEdit2(java.awt.Frame parent, boolean modal, boolean isUpdtae, MasterItemTypeBean bn) 
  {
    super(parent, modal);
    this.isUpdate = isUpdtae;
    
    initComponents();
    this.setLocationRelativeTo(null);
    
    if(isUpdtae)
    {
      txtTipeID.setText(bn.getID());
      txtNamaTipe.setText(bn.getName());
      txtNote.setText(bn.getNote());
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        LitemCode = new javax.swing.JLabel();
        LitemCode1 = new javax.swing.JLabel();
        txtNamaTipe = new javax.swing.JTextField();
        LitemCode2 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtTipeID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Info Tipe Barang");

        LitemCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LitemCode.setText("Kode Tipe :");

        LitemCode1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LitemCode1.setText("Nama Tipe :");

        LitemCode2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LitemCode2.setText("Keterangan :");
        LitemCode2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSave.setText("Simpan");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDelete.setText("Hapus");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCancel.setText("Keluar");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(btnSave)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete)
                            .addGap(18, 18, 18)
                            .addComponent(btnCancel))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(LitemCode1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LitemCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(LitemCode2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtTipeID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNamaTipe, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                .addComponent(txtNote, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LitemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTipeID, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LitemCode1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNamaTipe, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(LitemCode2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
    if(isUpdate)
    { update(); }
    else
    { create(); }
  }//GEN-LAST:event_btnSaveActionPerformed

  private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    delete();
  }//GEN-LAST:event_btnDeleteActionPerformed

  private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
   dispose();
  }//GEN-LAST:event_btnCancelActionPerformed

  /** Update Process. */
  private void update()
  {
    mitp = new MasterItemTypeProcessor();
    MasterItemTypeBean bn = this.validateData();
    if(!mitp.update(bn))
    {
      StatusTransaction = false;
      JOptionPane.showMessageDialog(this, "Error!", "Error!!! update master item type. ", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      StatusTransaction = true;
      JOptionPane.showMessageDialog(this, "Success!!", "Success update master item type. ", JOptionPane.PLAIN_MESSAGE);
    }
    
    //Finalising Proc
    mitp.finalize();
    System.out.println("AFTER FINALIZE");
    this.FinishingTransaction();
  }
  
  /** Create process. */
  private void create()
  {
    mitp = new MasterItemTypeProcessor();
    MasterItemTypeBean bn = this.validateData();
    if(!mitp.create(bn))
    {
      StatusTransaction = false;
      JOptionPane.showMessageDialog(this, "Error!", "Error create Master Item Type. ", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      StatusTransaction = true;
      JOptionPane.showMessageDialog(this, "Success!!", "Success create Master Item Type. ", JOptionPane.PLAIN_MESSAGE);
    }
    
    //Finalising Proc
    mitp.finalize();
    this.FinishingTransaction();
  }
  
  /** Delete process. */
  private void delete()
  {
    mitp = new MasterItemTypeProcessor();
    MasterItemTypeBean bn = this.validateData();
    if(!mitp.delete(bn.getID()))
    {
      StatusTransaction = false;
      JOptionPane.showMessageDialog(this, "Error!", "Error delete master item type. ", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      StatusTransaction = true;
      JOptionPane.showMessageDialog(this, "Success!!", "Success delete master item type. ", JOptionPane.PLAIN_MESSAGE);
    }
    
    //Finalising Proc
    mitp.finalize();
    this.FinishingTransaction();
  }
  
  /** get data from UI. */
  private MasterItemTypeBean validateData()
  {
    String tmp = null;
    MasterItemTypeBean bn = 
            new MasterItemTypeBean();
    
    /** validate ID Tipe. */
    tmp = txtTipeID.getText();
    if(!Utilities.isEmpty(tmp))
    { bn.setID(tmp); }
    else
    {
      JOptionPane.showMessageDialog(this, 
              "Error!", 
              "ID Tidak boleh kosong", 
              JOptionPane.ERROR_MESSAGE);
    }
    
    /** Validate Nama ID. */
    tmp = txtNamaTipe.getText();
    if(!Utilities.isEmpty(tmp))
    { bn.setName(tmp); }
    else
    {
      JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Nama Tidak boleh kosong", 
              JOptionPane.ERROR_MESSAGE);
    }
    
    bn.setNote(txtNote.getText());
    
    return bn;
  }
  
  public void FinishingTransaction()
  {
    //If transaction success
    if(StatusTransaction)
    {
      this.setVisible(false);
      //Refresh Table.
      mil = new MasterItemTypeList();
      mil.RefreshTable();
    }
  }
  
  public void finalizeMe()
  {
    StatusTransaction = false;
    if(null!=mitp) mitp = null;
  }
  
  /** Get status transaction is success or filed!!*/
  public boolean getStatusTransaction()
  { return StatusTransaction; }
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MasterItemTypeEdit2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MasterItemTypeEdit2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MasterItemTypeEdit2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MasterItemTypeEdit2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
        //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        MasterItemTypeEdit2 dialog = new MasterItemTypeEdit2(new javax.swing.JFrame(), true, false, null);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LitemCode;
    private javax.swing.JLabel LitemCode1;
    private javax.swing.JLabel LitemCode2;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtNamaTipe;
    private javax.swing.JTextField txtNote;
    private javax.swing.JTextField txtTipeID;
    // End of variables declaration//GEN-END:variables
}
