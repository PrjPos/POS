/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.st.ui;

import com.st.beans.MasterItemTypeBean;
import com.st.core.Main;
import com.st.process.MasterItemTypeProcessor;
import com.st.utils.Constants;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Timothy_Fab
 */
public class MasterItemTypeList extends javax.swing.JFrame 
{
  /** Item Type Info column size. */
  private final int ITEMTYPEINFO_COLSIZE = 3;
  /** Default table model for the Item Lookup. */
  private DefaultTableModel tm = null;
  
  /** Column Title - ID. */
  private final String COLTITLE_ID = "Kode #";
  /** Column Title - Name. */
  private final String COLTITLE_NAME = "Nama";
  /** Column Title - Standard Price. */
  private final String COLTITLE_NOTE = "Catatan";
  
  /** Column position for Item Info ID. */
  private final int ITEMTYPE_COL_ID = 0;
  /** Column position for Item Info Name. */
  private final int ITEMTYPE_COL_NAME = 1;
  /** Column position for Item Info Standard Sell Price. */
  private final int ITEMTYPE_COL_NOTE = 2;
  
  MasterItemTypeBean[] dataItemType = null;
  MasterItemTypeEdit2 itemEditUI = null;
  
  /** Processor. */
  private MasterItemTypeProcessor p = 
          new MasterItemTypeProcessor();
  
  /**
   * Creates new form MasterItemTypeList
   */
  public MasterItemTypeList() 
  {  
    initComponents();
    SearchItemType();
    setExtendedState(MAXIMIZED_BOTH);
  }

  private void SearchItemType()
  {
    //Searching List Item type.
    int searchBy = cmbSearchCriteria.getSelectedIndex();
    MasterItemTypeBean[] res;

    //SvrUtilities.isDebug = true;
    if(null==p) p = new MasterItemTypeProcessor();
    System.out.println("SEARCH BY: " + searchBy);
    switch(searchBy)
    {
      case 0://Search by item id
        res = p.getItemList(Constants.ITEMTYPE_SEARCHBY_ITEMID,
                            txtSearchValue.getText(),
                            null);
        break;      
      default://Search by item name
        res = p.getItemList(
          Constants.ITEMTYPE_SEARCHBY_ITEMNAME,
          txtSearchValue.getText(),
          null);
        break;
    }
    dataItemType = res;
    //Repaint the item list
    this.repaintItemTypeList(res);
  }
  
  /** Used to edit info. */
  public void editInfo(boolean action)
  {
    MasterItemTypeBean bn;
    if(action)
    {
      int SelectedRow = tblItemType.getSelectedRow();
        System.out.println("selected row_ "+ SelectedRow);
        System.out.println("data item type__ "+ dataItemType[1].getName());
      bn = dataItemType[SelectedRow];

      if(null!=bn)
      {
        itemEditUI = new MasterItemTypeEdit2(this, true, action, bn);
      }
    }
    else
    {itemEditUI = new MasterItemTypeEdit2(this, true, action, null);}
    
    
    itemEditUI.setVisible(true);
    itemEditUI.toFront();

    //after transaction is finish, reload
    itemEditUI.finalizeMe();
    this.SearchItemType();
  }
  
  public void resetEngine(boolean renew)
  {
    if(null!=p)
    {
      p.finalize();
      p = null;
    }

    if(null!=dataItemType) dataItemType = null;

    if(renew)
    {
      //Renew the processor and the transaction bean
      p = new MasterItemTypeProcessor();
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/st/ui/image/Background_jadi.png"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1378, 750);

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void repaintItemTypeList(MasterItemTypeBean[] res)
  {
    if(null==res || res.length<=0) return;

    this.resetItemTypeList(res.length);
    
    /* This is the row:
     * ID | NAME | STD SELL PRICE
     */
    //Set the items into the shopping list table.
    for(int i=0; i<res.length; i++)
    {
      //System.out.println("ROW " + i + ":" + res[i].getItemID() + "=" + res[i].getItemName() + "=" + res[i].getMailCity());
      tm.setValueAt(res[i].getID(), i, ITEMTYPE_COL_ID);
      tm.setValueAt(res[i].getName(), i, ITEMTYPE_COL_NAME);
      tm.setValueAt(res[i].getNote(), i, ITEMTYPE_COL_NOTE);
    }
  }
    
  private void resetItemTypeList(int row)
  {
    TableColumn t;

    int COLSIZE_ID = 100;
    int COLSIZE_NAME = 300;
    int COLSIZE_NOTE = 400;

    tm = new DefaultTableModel(row, ITEMTYPEINFO_COLSIZE);
    tm.setColumnIdentifiers(
      new String[]
      {
        COLTITLE_ID,
        COLTITLE_NAME,
        COLTITLE_NOTE
      }
    );
    
    tblItemType.setModel(tm);
    tm.setValueAt(null, 0, ITEMTYPE_COL_ID);
    tm.setValueAt(null, 0, ITEMTYPE_COL_NAME);
    tm.setValueAt(null, 0, ITEMTYPE_COL_NOTE);

    t = tblItemType.getColumn(COLTITLE_ID);
    t.setResizable(false);
    t.setMinWidth(COLSIZE_ID);
    t.setPreferredWidth(COLSIZE_ID);

    t = tblItemType.getColumn(COLTITLE_NAME);
    t.setResizable(false);
    t.setMinWidth(COLSIZE_NAME);
    t.setPreferredWidth(COLSIZE_NAME);

    t = tblItemType.getColumn(COLTITLE_NOTE);
    t.setResizable(false);
    t.setMinWidth(COLSIZE_NOTE);
    t.setPreferredWidth(COLSIZE_NOTE);
  }
    
  private void CloseMe()
  {
    int logoutResult = JOptionPane.showConfirmDialog(
                        this,
                        "Anda yakin untuk keluar?",
                        "LogoutConfirmation",
                        JOptionPane.YES_NO_OPTION);
    if(logoutResult==JOptionPane.YES_OPTION)
    {
      //Main.callModule(Constants.MOD_HOME);
      this.finalize();
    }
  }
  
  public void RefreshTable()
  { this.SearchItemType(); }
  
  public void finalize()
  {
    this.resetEngine(false);
    this.setVisible(false);
  }
  
  /**
  * @param args the command line arguments
  */
  public static void main(String args[]) {
      /* Set the Nimbus look and feel */
      //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
      /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
       * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       */
      try {
          for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
              if ("Nimbus".equals(info.getName())) {
                  javax.swing.UIManager.setLookAndFeel(info.getClassName());
                  break;
              }
          }
      } catch (ClassNotFoundException ex) {
          java.util.logging.Logger.getLogger(MasterItemTypeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (InstantiationException ex) {
          java.util.logging.Logger.getLogger(MasterItemTypeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (IllegalAccessException ex) {
          java.util.logging.Logger.getLogger(MasterItemTypeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      } catch (javax.swing.UnsupportedLookAndFeelException ex) {
          java.util.logging.Logger.getLogger(MasterItemTypeList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
      }
      //</editor-fold>

      /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
          public void run() {
              new MasterItemTypeList().setVisible(true);
          }
      });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
