/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.st.ui;

import com.st.beans.MasterItemBean;
import com.st.beans.MasterItemTypeBean;
import com.st.process.MasterItemProcessor;
import com.st.process.MasterItemTypeProcessor;

import com.st.utils.Utilities;
import javax.swing.JOptionPane;

/**
 *
 * @author SANFON
 */
public class MasterItemEdit extends javax.swing.JDialog 
{
  private boolean StatusTransaction;
  MasterItemProcessor mip = null;
  MasterItemTypeProcessor mitp = null;
  
  boolean isUpdate;
  
  MasterItemList mtl = null;
  
  /**
   * Creates new form MasterItemEdit
   */
  public MasterItemEdit(java.awt.Frame parent, boolean modal, boolean isUpdate, MasterItemBean bn) 
  {
    super(parent, modal);
    initComponents();
    this.setItemType();
    this.isUpdate = isUpdate;
    
    if(isUpdate)
    {
      txtItemId.setText(bn.getId());
      txtItemName.setText(bn.getName());
      jcmItemType.setSelectedItem(bn.getItemType());
      txtBuyPrice.setText(bn.getPurchasePrice()+"");
      txtSellPrice.setText(bn.getSalesPrice()+"");
    }
  }
  
  /** Set master item type in drop down. */
  public void setItemType()
  {
    MasterItemTypeBean[] mitb;
    //Initialize Proc
    mitp = new MasterItemTypeProcessor();
    //get master Item Type data
    mitb = mitp.getItemTypeList(null, null, null);
    //Iterate
    for (int i = 0; i < mitb.length; i++) 
    {
      jcmItemType.addItem(mitb[i].getID());
    }
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    LitemCode = new javax.swing.JLabel();
    LItemName = new javax.swing.JLabel();
    txtItemName = new javax.swing.JTextField();
    LItemName1 = new javax.swing.JLabel();
    btnSimpan = new javax.swing.JButton();
    btnKeluar = new javax.swing.JButton();
    LItemName2 = new javax.swing.JLabel();
    txtBuyPrice = new javax.swing.JTextField();
    LItemName3 = new javax.swing.JLabel();
    txtSellPrice = new javax.swing.JTextField();
    btnDelete = new javax.swing.JButton();
    jLabel1 = new javax.swing.JLabel();
    jcmItemType = new javax.swing.JComboBox();
    txtItemId = new javax.swing.JTextField();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jPanel1.setBackground(new java.awt.Color(204, 204, 255));

    LitemCode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    LitemCode.setText("Kode Barang : ");
    LitemCode.setAutoscrolls(true);

    LItemName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    LItemName.setText("Nama Barang : ");

    LItemName1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    LItemName1.setText("Type");

    btnSimpan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnSimpan.setText("simpan");
    btnSimpan.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSimpanActionPerformed(evt);
      }
    });

    btnKeluar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnKeluar.setText("Keluar");
    btnKeluar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnKeluarActionPerformed(evt);
      }
    });

    LItemName2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    LItemName2.setText("Harga Beli");

    txtBuyPrice.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        txtBuyPriceActionPerformed(evt);
      }
    });

    LItemName3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    LItemName3.setText("Harga Jual");

    btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnDelete.setText("Hapus");
    btnDelete.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnDeleteActionPerformed(evt);
      }
    });

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    jLabel1.setText("Info Barang");

    jcmItemType.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jcmItemTypeActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(128, 128, 128)
        .addComponent(jLabel1)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(31, 31, 31)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(LItemName3, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(LItemName2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(LItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(LitemCode)
          .addComponent(LItemName))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addComponent(txtSellPrice, javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(txtBuyPrice, javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jcmItemType, 0, 125, Short.MAX_VALUE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(txtItemId, javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnDelete)
                .addGap(0, 0, Short.MAX_VALUE))
              .addComponent(txtItemName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
            .addGap(81, 81, 81))))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
        .addGap(65, 65, 65)
        .addComponent(btnSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(btnKeluar)
        .addGap(81, 81, 81))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(13, 13, 13)
        .addComponent(jLabel1)
        .addGap(20, 20, 20)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(LitemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtItemId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(LItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtItemName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(LItemName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jcmItemType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(LItemName2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtBuyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(LItemName3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(txtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnSimpan)
          .addComponent(btnKeluar))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(btnDelete)
        .addGap(47, 47, 47))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
    this.setVisible(false);
    this.dispose();
  }//GEN-LAST:event_btnKeluarActionPerformed

  private void jcmItemTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcmItemTypeActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jcmItemTypeActionPerformed

  private void txtBuyPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuyPriceActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_txtBuyPriceActionPerformed

  private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    
  }//GEN-LAST:event_btnDeleteActionPerformed

  private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
    if(isUpdate)
    { update(); }
    else
    { create(); }
  }//GEN-LAST:event_btnSimpanActionPerformed

  /** Update Process. */
  private void update()
  {
    System.out.println("UPDATE PROCESS_____");
    mip = new MasterItemProcessor();
    MasterItemBean bn = this.validateData();
    if(!mip.update(bn))
    {
      StatusTransaction = false;
      JOptionPane.showMessageDialog(this, "Error!", "Error!!! update master item type. ", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      StatusTransaction = true;
      JOptionPane.showMessageDialog(this, "Success!!", "Success update master item type. ", JOptionPane.PLAIN_MESSAGE);
    }
    
    //Finalising Proc
    mip.finalize();
    System.out.println("AFTER FINALIZE");
    this.FinishingTransaction();
  }
  
  /** Cretae process. */
  private void create()
  {
    System.out.println("INSERT PROCESS_____");
    mip = new MasterItemProcessor();
    MasterItemBean bn = this.validateData();
    if(!mip.create(bn))
    {
      StatusTransaction = false;
      JOptionPane.showMessageDialog(this, "Error!", "Error create master item type. ", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      StatusTransaction = true;
      JOptionPane.showMessageDialog(this, "Success!!", "Success create master item type. ", JOptionPane.PLAIN_MESSAGE);
    }
    
    //Finalising Proc
    mip.finalize();
    this.FinishingTransaction();
  }
  
  
  /** Delete process. */
  private void delete()
  {
    mitp = new MasterItemTypeProcessor();
    MasterItemBean bn = this.validateData();
    if(!mitp.delete(bn.getId()))
    {
      StatusTransaction = false;
      JOptionPane.showMessageDialog(this, "Error!", "Error delete master item. ", JOptionPane.ERROR_MESSAGE);
    }
    else
    {
      StatusTransaction = true;
      JOptionPane.showMessageDialog(this, "Success!!", "Success delete master item. ", JOptionPane.PLAIN_MESSAGE);
    }
    
    //Finalising Proc
    mitp.finalize();
    this.FinishingTransaction();
  }
  
  private MasterItemBean validateData()
  {
    String tmp = null;
    MasterItemBean itemBn = 
            new MasterItemBean();
    
    /** Validate ID. */
    tmp = txtItemId.getText();
    if(!Utilities.isEmpty(tmp))
    {itemBn.setId(tmp);}
    else
    {
      JOptionPane.showMessageDialog(this, 
              "Error!", 
              "ID Tidak boleh kosong", 
              JOptionPane.ERROR_MESSAGE);
    }
    
    /** Validate Item Name. */
    tmp = txtItemName.getText();
    if(!Utilities.isEmpty(tmp))
    {itemBn.setName(tmp);}
    else
    {
      JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Nama Tidak boleh kosong", 
              JOptionPane.ERROR_MESSAGE);
    }
    
    /** Validate item Type. */
    tmp = (String)jcmItemType.getSelectedItem();
    if(!Utilities.isEmpty(tmp))
    {itemBn.setItemType(tmp);System.out.println("COMBO BOX: " + tmp);}
    else
    {
      JOptionPane.showMessageDialog(this, 
              "Error!", 
              "ID Tidak boleh kosong", 
              JOptionPane.ERROR_MESSAGE);
    }
    
    /** Validate Purchase Price. */
    tmp = txtBuyPrice.getText();
    if(!Utilities.isEmpty(tmp))
    {
      try
      {
        double buyPrice = Double.parseDouble(tmp);
        if(buyPrice <= 0)
        {
          JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Harga beli harus lebih besar dari 0", 
              JOptionPane.ERROR_MESSAGE);
        }
        else
        {itemBn.setPurchasePrice(buyPrice);}
      }
      catch(Exception e)
      {
        JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Format salah", 
              JOptionPane.ERROR_MESSAGE);
      }
    }
    else
    {
      JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Harga beli Tidak boleh kosong", 
              JOptionPane.ERROR_MESSAGE);
    }
    
    /** Validate Item Name. */
    tmp = txtSellPrice.getText();
    if(!Utilities.isEmpty(tmp))
    {
      try
      {
        double sellPrice = Double.parseDouble(tmp);
        if(sellPrice <= 0)
        {
          JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Harga beli harus lebih besar dari 0", 
              JOptionPane.ERROR_MESSAGE);
        }
        else
        {itemBn.setPurchasePrice(sellPrice);}
      }
      catch(Exception e)
      {
        JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Format salah", 
              JOptionPane.ERROR_MESSAGE);
      }
    }
    else
    {
      JOptionPane.showMessageDialog(this, 
              "Error!", 
              "Harga jual tidak boleh kosong", 
              JOptionPane.ERROR_MESSAGE);
    }
    
    return itemBn;
  }
  
  public void FinishingTransaction()
  {
    //If transaction success
    if(StatusTransaction)
    {
      this.setVisible(false);
      //Refresh Table.
      mtl = new MasterItemList();
      mtl.RefreshTable();
    }
  }
  
  public void finalizeMe()
  {
    StatusTransaction = false;
    if(null!=mip) { mip.finalize(); mip = null; }
  }
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(MasterItemEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(MasterItemEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(MasterItemEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(MasterItemEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
        //</editor-fold>
        //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        MasterItemEdit dialog = new MasterItemEdit(new javax.swing.JFrame(), true, false, null);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
          @Override
          public void windowClosing(java.awt.event.WindowEvent e) {
            System.exit(0);
          }
        });
        dialog.setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel LItemName;
  private javax.swing.JLabel LItemName1;
  private javax.swing.JLabel LItemName2;
  private javax.swing.JLabel LItemName3;
  private javax.swing.JLabel LitemCode;
  private javax.swing.JButton btnDelete;
  private javax.swing.JButton btnKeluar;
  private javax.swing.JButton btnSimpan;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JComboBox jcmItemType;
  private javax.swing.JTextField txtBuyPrice;
  private javax.swing.JTextField txtItemId;
  private javax.swing.JTextField txtItemName;
  private javax.swing.JTextField txtSellPrice;
  // End of variables declaration//GEN-END:variables
}
